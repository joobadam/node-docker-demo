name: CI - Build and Push Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_API: ghcr.io/${{ github.repository }}-api
      IMAGE_WEB: ghcr.io/${{ github.repository }}-web
      # SHORT_SHA will be set via GITHUB_ENV in the next step
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute SHORT_SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_API }}:latest
            ${{ env.IMAGE_API }}:sha-${{ env.SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Web image
        uses: docker/build-push-action@v6
        with:
          context: ./web
          file: ./web/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.IMAGE_WEB }}:latest
            ${{ env.IMAGE_WEB }}:sha-${{ env.SHORT_SHA }}
          build-args: |
            NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL || 'http://localhost:3000' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag release images
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          docker buildx imagetools create -t $IMAGE_API:$VERSION $IMAGE_API:sha-$SHORT_SHA
          docker buildx imagetools create -t $IMAGE_WEB:$VERSION $IMAGE_WEB:sha-$SHORT_SHA
